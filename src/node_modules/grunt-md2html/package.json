{
  "name": "grunt-md2html",
  "description": "Small Grunt MultiTask to convert Markdown files to HTML, supporting Grunt >= 0.4.0",
  "version": "0.2.1",
  "homepage": "https://github.com/bylexus/grunt-md2html",
  "author": {
    "name": "Alexander Schenkel",
    "email": "alex@alexi.ch",
    "url": "http://www.alexi.ch/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bylexus/grunt-md2html.git"
  },
  "bugs": {
    "url": "https://github.com/bylexus/grunt-md2html/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/bylexus/grunt-md2html/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "marked": "^0.3.2"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-md2html\n\nSmall Grunt MultiTask based on the nodejs package [marked](https://github.com/chjj/marked) to convert Markdown files to HTML, supporting Grunt >= 0.4.0\n\n* Takes input Markdown-Files\n* process them using the grunt-internal template engine (lodash)\n* converts them to HTML either one-by-one or many-to-one\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-md2html --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-md2html');\n```\n\n## The \"md2html\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `md2html` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  md2html: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.layout\nType: `String`\nDefault value: `null`\n\nA path to a layout file: A Layout file defines the global surrounding layout,\ne.g. an HTML header / footer. Within the Layout file you can then include the\nactual processed .md-file content.\n\nExample layout file:\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"<%= basepath %>/style.css\">\n        <title></title>\n    </head>\n    <body>\n        <%= document %>\n    </body>\n</html>\n```\nThis layout file adds an HTML skeleton around each processed output file, replacing the template\nstrings `basepath` and `document ` (the processed content).\n\n\n#### options.basePath\nType: `String`\nDefault value: `null`\n\nIf basePath is set, you can use `<%= basepath %>` in your .md / layout file, which is expanded\nto a relative path from the actual output file to the given basePath. Useful to link\nstatic resources like stylesheets in the layout file\n\n#### options.markedOptions\nType: `Object`\nDefault value: `{}`\n\nOptions to be set on the `marked` package, see https://github.com/chjj/marked for details. E.g.:\n\n```\nmarkedOptions: {\n  gfm: false\n}\n```\n\ndisables the GIT flavored markdown.\n\n#### options.templateData\nType: `Object`\nDefault value: `{}`\n\nAdditional data which is passed to the template engine before the .md file is processed.\nThe data object's content is directly available as template vars / functions. See Usage Examples\nfor more information.\n\n\n#### options.separator\nType: `String`\nDefault value: `'\\n\\n'`\n\nA string value that is used to concatenate the .md files if used in one-outputfile mode\n\n### Template variables\n\nEach markdown file is first processed by the Grunt-internal Template Engine (see http://gruntjs.com/api/grunt.template). In addition to the grunt-own template variables and functions, you can use the following\nvariables which are replaced BEFORE processing the MD file:\n\n* `document`: Contains the processed HTML code for a destination file. Useful for a Layout file. (For backward compatibility: use `{DOC}`)\n* `basepath`: Points relatively to the `dest` path of the actual output, or to the given basePath in the options. (For backward compatibility: use `{BASEPATH}`)\n* `destination`: The relative path to the actual destination file. (For backward compatibility: use `{DEST}`)\n* `src`: The original .md source file in which the variable occurs\n\n### Usage Examples\n\n#### Single HTML file output\nIn this example, all found .md files are converted to HTML and ONE html output file is generated:\n\n\n```js\ngrunt.initConfig({\n  md2html: {\n      one_file: {\n        options: {},\n        files: [{\n          src: ['my/md/files/**/*.md'],\n          dest: 'out/output.html'\n        }]\n      }\n    }\n})\n```\n\n#### One HTML file per md file output\nIn this example, all found .md files are converted to an HTML file in the same directory.\nNote that this is a base functionality of grunt's file expanding facility:\n\n\n```js\ngrunt.initConfig({\n  md2html: {\n      multiple_files: {\n        options: {},\n        files: [{\n          expand: true,\n          cwd: 'base/path/to/md/files',\n          src: ['**/*.md'],\n          dest: 'output',\n          ext: '.html'\n        }]\n      }\n    }\n});\n```\n\n#### Options example\nThis example just demonstrates the different options:\n\n* layout: A layout file used for each processed output file\n* basePath: The `<%= basepath %>` template variable which can be used within the docs points relatively to the basePath\n* separator: concatenator string when using multiple md files which go to one output file\n\n\n```js\ngrunt.initConfig({\n  md2html: {\n      multiple_files: {\n        options: {\n          layout: 'path/to/layout.html',\n          basePath: 'path/to',\n          markedOptions: {\n            gfm: false,\n            langPrefix: 'code-'\n          }\n        },\n        files: [{\n          expand: true,\n          cwd: 'base/path/to/md/files',\n          src: ['**/*.md'],\n          dest: 'output',\n          ext: '.html'\n        }]\n      }\n    }\n});\n```\n\n\n#### Template example\nThis example demonstrates the usage of the pre-processing Template engine which can be used\nto process arbitary javascript variable / functions:\n\n##### grunt config\n```js\ngrunt.initConfig({\n  md2html: {\n      multiple_files: {\n        options: {\n          basePath: 'path/to',\n          // Provide the function `basename` and a variable `author` to the templates\n          templateData: {\n            basename: function(src) {\n                return src.substr(src.lastIndexOf(path.sep)+1);\n            },\n            author: process.env.USER\n\n          },\n        },\n        files: [{\n          expand: true,\n          cwd: 'base/path/to/md/files',\n          src: ['**/*.md'],\n          dest: 'output',\n          ext: '.html'\n        }]\n      }\n    }\n});\n```\n\n##### Template .md file\n```\nHello. This is an example written by <%= author %>.\nIt comes from the file <%= basename(src) %>, and ends in the file <%= destination %>.\nCreated on <%= grunt.template.today('yyyy-mm-dd HH:MM:ss') %>.\n```\n\n\n\n\n## Release History\n\n* 0.1.1: Changed Markdown parser: node-markdown replaced by marked\n* 0.1.0: Very first release, no testing yet\n* 0.1.5: Fixed: '$&' in html causes the tool to crash\n* 0.1.6: Updated 'marked' dependency: now uses marked 0.2.10 as dependant version\n* 0.1.7: Updated 'marked' dependency: now uses marked 0.3.2\n* 0.2.0: Process MD files with the grunt-internal Template engine (lodash) first.\n         Keeping backwards-compatibility.\n* 0.2.1: Fixing Relative Path bug: introduced in 0.2.0, the basepath was no longer relative to the options.basePath set in config in scenarios using more than one directory level.\n\n\n## License\n\n(c) 2013-2014 Alexander Schenkel\nLicensed under the MIT License\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-md2html@0.2.1",
  "_from": "grunt-md2html@~0.2.1"
}
